sOSEK OSEK {

   OS ExampleOS {
      STATUS = EXTENDED;
      ERRORHOOK = FALSE;
      PRETASKHOOK = FALSE;
      POSTTASKHOOK = FALSE;
      STARTUPHOOK = FALSE;
      SHUTDOWNHOOK = FALSE;
      USERESSCHEDULER = FALSE;
      MEMMAP = FALSE;
   };

   APPMODE = AppMode1;

   TASK InitTask {
      PRIORITY = 1;
      SCHEDULE = NON;
      ACTIVATION = 1;
      STACK = 128;
      TYPE = BASIC;
      AUTOSTART = TRUE {
      APPMODE = AppMode1;
      }
   }

   TASK KeypadTask {
      PRIORITY = 6;
      SCHEDULE = NON;
      ACTIVATION = 1;
      STACK = 512;
      TYPE = EXTENDED;
   }

   TASK RefreshDisplayTask {
      PRIORITY = 5;
      SCHEDULE = FULL;
      ACTIVATION = 1;
      STACK= 512;
      TYPE = EXTENDED;
   }

   TASK DetectActiveSlavesTask {
      PRIORITY = 4;
      SCHEDULE = FULL;
      ACTIVATION = 1;
      STACK= 512;
      TYPE = EXTENDED;
   }

   TASK TakeDataSlavesTask {
      PRIORITY = 3;
      SCHEDULE = FULL;
      ACTIVATION = 1;
      STACK= 512;
      TYPE = EXTENDED;
   }

   TASK ActionTask {
      PRIORITY = 2;
      SCHEDULE = FULL;
      ACTIVATION = 1;
      STACK= 512;
      TYPE = EXTENDED;
   }

   ISR UART_RS485_IRQHandler {
      CATEGORY = 2;
      INTERRUPT = UART0;
      PRIORITY = 0;
   }


   
   ALARM ActivateKeypadTask {
      COUNTER = SoftwareCounter;
      ACTION = ACTIVATETASK {
         TASK = KeypadTask;
      }
      AUTOSTART = FALSE;
   }

   ALARM ActivateRefreshDisplayTask {
      COUNTER = SoftwareCounter;
      ACTION = ACTIVATETASK {
         TASK = RefreshDisplayTask;
      }
      AUTOSTART = FALSE;
   }
   ALARM ActivateDetectActiveSlavesTask {
      COUNTER = SoftwareCounter;
      ACTION = ACTIVATETASK {
         TASK = DetectActiveSlavesTask;
      }
      AUTOSTART = FALSE;
   }

   COUNTER HardwareCounter {
      MAXALLOWEDVALUE = 60000;
      TICKSPERBASE = 1;
      MINCYCLE = 1;
      TYPE = HARDWARE;
      COUNTER = HWCOUNTER0;
      };

   COUNTER SoftwareCounter {
      MAXALLOWEDVALUE = 60000;
      TICKSPERBASE = 1;
      MINCYCLE = 1;
      TYPE = SOFTWARE;
   };

   ALARM IncrementSWCounter {
      COUNTER = HardwareCounter;
      ACTION = INCREMENT {
         COUNTER = SoftwareCounter;
      };
      AUTOSTART = TRUE {
         APPMODE = AppMode1;
         ALARMTIME = 1;
         CYCLETIME = 1;
      };
   };

};
